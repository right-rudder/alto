---
const EMAIL_FORM_WEBHOOK_URL = import.meta.env.EMAIL_FORM_WEBHOOK_URL;
const PORTAL_API_KEY = import.meta.env.PORTAL_API_KEY;
---

<form
  id="email-form"
  class="lg:max-w-6xl mt-20 lg:mt-24 max-w-xl mx-auto bg-red-700 py-20 px-5 lg:px-20 gap-5 flex justify-between items-center flex-col lg:flex-row lg:gap-10 xl:gap-24 z-10"
>
  <h3 class="text-white font-bold text-3xl flex-1">
    Want to be notified when the next ground school starts? <br
      class="lg:block hidden"
    /> Sign up here.
  </h3>
  <div class="flex relative flex-1 flex-col w-full pt-10 lg:pt-0">
    <input
      id="email"
      type="email"
      name="email"
      required
      placeholder="Your email"
      class="px-5 py-4 w-full outline-1 focus:ring-0 border-gray-300 border outline-gray-400 rounded-full"
    />
    <input
      type="email"
      name="confirm-email"
      placeholder="Confirm email"
      class="hidden px-5 py-4 outline-1 w-full border-gray-400 border outline-gray-500 rounded-full"
    />
    <button
      type="submit"
      class="btn-dark-blue hover:outline hover:outline-dark-blue hover:bg-white hover:text-dark-blue border-blue-800 px-8 lg:absolute lg:right-[1px] py-4 lg:top-[1px] mt-10 lg:mt-0"
    >
      Sign up
    </button>
  </div>
</form>

<script define:vars={{ EMAIL_FORM_WEBHOOK_URL, PORTAL_API_KEY }}>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("email-form");
    if (!form) {
      console.error("Form element not found.");
      return;
    }

    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      const formData = new FormData(form);
      const confirmEmail = formData.get("confirm-email")?.trim();

      if (confirmEmail) return;

      const webhookURL = EMAIL_FORM_WEBHOOK_URL;
      const apiKey = PORTAL_API_KEY;

      const urlEncodedBody = new URLSearchParams(formData).toString();

      const jsonBody = {
        first_name: formData.get("first-name")?.trim() || "",
        last_name: formData.get("last-name")?.trim() || "",
        email: formData.get("email")?.trim() || "",
        phone: formData.get("phone")?.trim() || "",
        campaign: "email_notification",
        account_random_id: "ac_xbpzsoyp",
      };

      try {
        const [ghlRes, portalRes] = await Promise.all([
          fetch(webhookURL, {
            method: "POST",
            headers: {
              "Content-Type": "application/x-www-form-urlencoded",
            },
            body: urlEncodedBody,
          }),
          fetch("https://portal.rightruddermarketing.com/api/leads", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Accept: "application/json",
              "x-api-key": apiKey,
            },
            body: JSON.stringify(jsonBody),
          }),
        ]);

        if (ghlRes.ok && portalRes.ok) {
          window.location.href = "/email-confirmation";
        } else {
          console.error("Submission failed", {
            ghlStatus: ghlRes.status,
            portalStatus: portalRes.status,
          });
        }
      } catch (err) {
        console.error("Submission error:", err);
      }
    });
  });
</script>

<script src="../scripts/emailValidation.js"></script>
